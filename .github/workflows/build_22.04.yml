name: Build 22.04

on:
  push:
    branches:
      - "main"
      - "dev"

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  Build:
    name: Build 22.04 - ${{ matrix.platform }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - platform: amd64
            runner: ubuntu-24.04
          - platform: arm64
            runner: ubuntu-24.04-arm64
      fail-fast: false
    timeout-minutes: 120
    env:
      TAG_SUFFIX: ${{ github.ref == 'refs/heads/dev' && '-dev' || '' }}
    steps:
      - name: Checkout external repo (context)
        uses: actions/checkout@v4
        with:
          repository: ProcessControlProd/odoo-kube-manager
          ref: main
          path: external-context
          token: ${{ secrets.GH_PAT }}

      - name: Set up Docker CLI
        uses: docker/setup-buildx-action@v3

      - name: Restore docker cache
        uses: actions/cache@v3
        with:
          path: ./docker-cache
          key: docker-cache-22.04-${{ matrix.platform }}${{ env.TAG_SUFFIX }}
          restore-keys: |
            docker-cache-22.04-${{ matrix.platform }}${{ env.TAG_SUFFIX }}
            docker-cache-22.04-${{ matrix.platform }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3.2.0
        with:
          registry: ${{ vars.ECR_REPOSITORY }}
          username: ${{ vars.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build for ${{ matrix.platform }}
        uses: docker/build-push-action@v6
        with:
          context: ./external-context
          file: ./external-context/odoo/docker/22.04/Dockerfile
          push: true
          platforms: linux/${{ matrix.platform }}
          tags: ${{ vars.ECR_REPOSITORY }}/k8s-odoo/odoo:22.04-${{ matrix.platform }}${{ env.TAG_SUFFIX }}
          cache-from: type=local,src=./docker-cache
          cache-to: type=local,dest=./docker-cache,mode=max
  Push:
    name: Push ${{ matrix.version }} to Repository
    needs: Build
    runs-on: ubuntu-latest
    env:
      TAG_SUFFIX: ${{ github.ref == 'refs/heads/dev' && '-dev' || '' }}
    strategy:
      matrix:
        version: ["15.0", "16.0"]
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3.2.0
        with:
          registry: ${{ vars.ECR_REPOSITORY }}
          username: ${{ vars.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Combine and push the multi-platform image
        run: |
          docker buildx imagetools create \
            --tag ${{ vars.ECR_REPOSITORY }}/k8s-odoo/odoo:${{ matrix.version }}${{ env.TAG_SUFFIX }} \
            ${{ vars.ECR_REPOSITORY }}/k8s-odoo/odoo:22.04-amd64${{ env.TAG_SUFFIX }} \
            ${{ vars.ECR_REPOSITORY }}/k8s-odoo/odoo:22.04-arm64${{ env.TAG_SUFFIX }}
